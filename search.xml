<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
    
    <entry>
      <title><![CDATA[Linux入门教程——基本操作与常用命令]]></title>
      <url>http://nearsc.github.io/2017/08/19/06climate-linux-intro-2/</url>
      <content type="html"><![CDATA[<p>气象家园投稿第二篇：基本操作与常用命令</p>
<a id="more"></a>
<p>上一期跟大家谈了谈我对Linux的一些个人感受，也讲了Fedora 23的安装过程，那么接下来就是关于“如何用好Linux”的内容了。本期我将以“让初学者快速上手”为主要目标，介绍Linux下的基本操作与常用命令，分享一些我使用时的小经验，希望大家喜欢 :P</p>
<h1 id="快速上手"><a href="#快速上手" class="headerlink" title="快速上手"></a>快速上手</h1><p>下面的内容均在Fedora 20下进行示范，可能有的小伙伴已经安装了其他Linux发行版（如Ubuntu，CentOS等），但那并不会造成太大影响。<br>启动Fedora 20以后，进行用户登陆，之后弹出来一个桌面，看起来和Windows差不多嘛！正如上期所言，许多Linux发行版都具有图形界面，如果你想切换成字符界面，可以通过组合键Ctrl+Alt+F2~F6来实现。你可以直接就用字符界面来进行后面的操作，但若想使用图形界面（或许是因为你想一边放音乐一边练习命令），就需要把桌面提供的终端调出来，即在程序列表里面找类似“Terminal”的程序。当然我建议你上网搜一下，你所用系统里调出终端的快捷键是什么？如果你和我一样使用了Fedora（桌面为GNOME），那么需要自行设置快捷键（Settings → Keyboard → Shortcuts → Custom Shortcuts → ‘+’），如下图：<br><img src="/2017/08/19/06climate-linux-intro-2/pic_1.png" alt="pic_1.png" title=""><br>其中Name随意填写，Command栏写上“/usr/bin/gnome-terminal”。确定以后可以点击图中Terminal蓝色长条的右端，即可设置快捷键，我这里是“Super+T”，Super即Windows键。不管你是用的是字符界面，还是桌面下的终端，接下来就开始进行一些简单的操作吧！</p>
<p>进入终端（或字符界面）以后，会出现类似下面的命令提示行，意思是用户N在计算机Dell上登录了，当前路径是~<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[N@Dell ~]$</span><br></pre></td></tr></table></figure></p>
<p>以前Windows下从“我的电脑”（即文件浏览器）中查看文件，新建文件夹，复制、移动文件等，现在均以在终端敲命令的方式实现，我们先看下面这一系列操作<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">[N@Dell ~]$ pwd</span><br><span class="line">/home/N</span><br><span class="line">[N@Dell ~]$ ls</span><br><span class="line">Data     Documents  intel  Music     Public  Templates</span><br><span class="line">Desktop  Downloads  Model  Pictures  Temp    Videos</span><br><span class="line">[N@Dell ~]$ cd Temp</span><br><span class="line">[N@Dell Temp]$ ls</span><br><span class="line">fhello_world_mpi      hello      sin    solve_equation  test1.c</span><br><span class="line">fhello_world_mpi.f90  hello.f90  sin.c  test1</span><br><span class="line">[N@Dell Temp]$ cp hello hello2</span><br><span class="line">[N@Dell Temp]$ mkdir new</span><br><span class="line">[N@Dell Temp]$ mv hello2 new/</span><br><span class="line">[N@Dell Temp]$ new/hello2 </span><br><span class="line"> Hello world!</span><br><span class="line">[N@Dell Temp]$ rm new/hello2 </span><br><span class="line">rm: remove regular file ‘new/hello2’? y</span><br><span class="line">[N@Dell Temp]$ rmdir new/</span><br><span class="line">[N@Dell Temp]$ cd ..</span><br><span class="line">[N@Dell ~]$</span><br></pre></td></tr></table></figure></p>
<p>pwd是查看当前的目录位置，为/home/N；ls为显示当前目录下的内容，可以看到有Data、Documents……，它们可能是文件夹、各类文件、可执行程序等等；cd为切换目录，这里进入Temp目录，并ls显示了Temp目录下的内容；cp为复制文件，把hello这个文件复制成hello2；mkdir为建立新目录，mv为移动文件，我把复制得到的hello2移动到新建的new目录下了；new/hello2的意思是“执行hello2”，这说明hello2是个可执行文件，即Windows下的.exe文件，看，它在屏幕上给你打了个招呼呢！最后我用rm、和rmdir分别删除了hello2文件和new文件夹，并回到上一级目录（cd ..）。<br>对于上述执行的这些命令，我有几点要说明一下：</p>
<ol>
<li><p>绝对路径和相对路径（可能会有人不太清楚）：绝对路径即完整的路径，如pwd后得到的/home/N；相对路径即相对于当前目录位置的路径，例如当你要进入/home/N/Temp，但你现在位置为/home时，就可以输入cd N/Temp。顺便提一下几个特殊路径，~为用户家目录（如对于用户N，~相当于/home/N），.（点）为当前目录，..（两个点）为上一级目录，-为上一次路径。大家可以用cd ~，cd .，cd ..，cd -试试效果。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[N@Dell ~]$ pwd</span><br><span class="line">/home/N</span><br><span class="line">[N@Dell ~]$ cd /home/N/Temp/solve_equation/method1/</span><br><span class="line">[N@Dell method1]$ cd -</span><br><span class="line">/home/N</span><br><span class="line">[N@Dell ~]$ cd ..</span><br><span class="line">[N@Dell home]$</span><br></pre></td></tr></table></figure>
</li>
<li><p>所谓命令，其实也就是程序而已，当你输ls的时候，实际上你就是运行了/usr/bin/ls这个程序。之前我们也在/home/N/Temp下输入new/hello2来运行hello2这个程序，在我看来，ls和hello2本质上没多大区别，只是一个是系统自带的程序，一个是我写的程序。由于hello2被我删了，我们就运行下hello吧。以绝对路径的形式。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[N@Dell ~]$ /usr/bin/ls</span><br><span class="line">Data	 Documents  intel  Music     Public  Templates</span><br><span class="line">Desktop  Downloads  Model  Pictures  Temp    Videos</span><br><span class="line">[N@Dell ~]$ /home/N/Temp/hello</span><br><span class="line"> Hello world!</span><br></pre></td></tr></table></figure>
<p>不过如果这样输入呢？</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[N@Dell ~]$ ls</span><br><span class="line">Data     Documents  intel  Music     Public  Templates</span><br><span class="line">Desktop  Downloads  Model  Pictures  Temp    Videos</span><br><span class="line">[N@Dell ~]$ hello</span><br><span class="line">bash: hello: command not found...</span><br></pre></td></tr></table></figure>
<p>当你输入ls时，系统明白你要运行/usr/bin/ls，但输入hello时系统就晕了，因为你没有事先告诉它你的hello在哪。实际上你只需要在某个文件（.bashrc）里写上hello的绝对路径，系统就会由那个文件获取hello的路径。这样就可以通过直接敲入hello来执行而无需敲完整路径了！关于那个文件的事情我们以后再详细聊~<br>你也可以用相对路径的行式来运行hello，首先”cd /home/N/Temp/”，再敲入”./hello”，注意这和直接敲”hello”是不同的，之前说过.（点）是代表当前目录，”./hello”相当于给出了相对路径，与”cd /home/N/Temp/”组合起来，系统就知道你的hello文件的位置然后正常运行了。<br>这儿有个叫which的命令需要提一下，它可以查看某命令的文件路径在哪。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[N@Dell ~]$ which mv</span><br><span class="line">/usr/bin/mv</span><br></pre></td></tr></table></figure>
<p>若你没有将hello的绝对路径写到.bashrc文件里，那么which hello的结果就是“找不着”哦！</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[N@Dell ~]$ which hello</span><br><span class="line">/usr/bin/which: no hello in ...（这里省略了若干路径）</span><br></pre></td></tr></table></figure>
</li>
<li><p>不管是所谓的命令，还是你自己写的程序，实际上我们运行它们都是类似这样的形式</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[N@Dell ~]$ command [-option] para1 para2 …</span><br></pre></td></tr></table></figure>
<p>command可以是ls、/home/N/Temp/hello等等；-option为选项，通常以-或–（横杠或双横杠）开头；para1、para2等即参数。如“ls -l ..”会显示上一级目录的详细（因为有“-l”选项）内容；如“cp -r dir1 dir2”，加上“-r”使你可以复制文件夹。实际上，对于每个命令，都有一堆可选择的选项，而又有这么多的命令，怎么可能都记得住嘛！别急，绝大多数命令都有–help选项，加上这个选项就可以迅速浏览某命令的各选项简述。若要获得某个命令的详细描述，则可以使用man和info这两个命令：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[N@Dell ~]$ ls --help</span><br><span class="line">[N@Dell ~]$ man cp</span><br><span class="line">[N@Dell ~]$ info mkdir</span><br></pre></td></tr></table></figure>
<p>我觉得吧，了解了之前的那些简单操作后，大家应该先学好man命令，这样以后遇到新命令，就直接man一下，就什么都知道了哦！另外，你可以先man一下man，里面会有对man的详细说明的，然后百度一下就会了！</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[N@Dell ~]$ man man</span><br></pre></td></tr></table></figure>
</li>
<li><p>有时候我们需要反复执行同一条命令，当这条命令超级长的时候，我想你肯定不耐烦一遍遍输入吧，因此我们要了解下如何查看历史操作。一般在命令行直接用↑, ↓方向键就行了，不过这里再介绍下其他方式：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[N@Dell ~]$ history</span><br><span class="line">[N@Dell ~]$ !1000</span><br></pre></td></tr></table></figure>
<p>history会列出你之前执行的命令，!1000则执行history中编号为1000的那条命令。另外，在命令行按下组合键Ctrl+r后再输入你的命令，也能快速搜索历史操作并执行。<br>还有自动补全功能，tab与tabtab（按两次），也能让你少敲不少字符。（ps：有些系统并不是用tab来进行补全哟~）<br>对了，如果执行某个命令时半天没有回应，你可以试试按下组合键Ctrl+C来终止命令。比如你用du时：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[N@Dell ~]$ du –sh /</span><br></pre></td></tr></table></figure>
</li>
</ol>
<h1 id="其他常用的命令"><a href="#其他常用的命令" class="headerlink" title="其他常用的命令"></a>其他常用的命令</h1><p>用户权限：chown、chgrp、chmod、passwd、su<br>压缩、解压及打包：gzip、bzip2、tar<br>查看文件内容：cat、more、less、head、tail<br>搜索：which、find、grep、locate<br>网络：ping、ifconfig…<br>系统资源信息：df、du、top、free…<br>文件：ln、touch、diff、stat<br>日期：date、cal<br>……<br>我简单列了一些命令供大家查询练习，但Linux的神奇与强大，需要大家自己去摸索研究~<br>还有大家平时就用普通用户帐号（如我的N帐号）吧，管理系统时才需要使用root帐号。</p>
<h1 id="心得（不如说是感慨吧）"><a href="#心得（不如说是感慨吧）" class="headerlink" title="心得（不如说是感慨吧）"></a>心得（不如说是感慨吧）</h1><ol>
<li>作为非计算机专业的我们，其实并不需要“按部就班”地学习Linux，或者说不需要抱着本书从头看到尾，而是在了解基本知识后就可以边学习边使用它做些工作了。这样不用浪费太多时间，最重要的是使用它会让你更快地熟悉了解它。</li>
<li>由于我们是“跳着”学的，肯定会经常遇到不懂的问题需要上网搜索，这时对信息的检索能力就十分重要了，才可以迅速找到解决方法啊！相互交流，多多讨教也是一种有效的方式！</li>
<li>从计算机的角度出发进行思考。我时常会琢磨，Linux作为一类优秀的系统，有哪些能力是理所当然会具备的呢？或者对于Windows下许多功能，它又将如何实现呢？比如Linux应该能对各用户合理分配资源吧，那需要做些什么呢？再想想Linux下怎么查看一个文件夹含有的所有文件数呢？就这样自己思考问题，然后去搜索答案，那么许多问题在出现之前就已经被解决了，相比临时遇到问题再搜索的方式，要节省时间得多。此外，这样也让你思维更活跃，说不定遇到问题时自己突然就知道如何解决了，嗯。</li>
</ol>
<h1 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h1><p>因为我想让第一次使用Linux的人能够快速熟悉，许多操作说明难免有些繁琐、啰嗦，之后肯定会以更加简明的形式描述的。最后，如果有问题的话，可以去气象家园给我留言哈！</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Linux入门教程——Linux简介]]></title>
      <url>http://nearsc.github.io/2017/08/19/06climate-linux-intro-1/</url>
      <content type="html"><![CDATA[<p>气象家园投稿第一篇：Linux简介</p>
<a id="more"></a>
<h1 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h1><p>Hi，大家好！我是受“风往北吹”前辈的邀请，想写写关于Linux入门教程的一个无名小卒，面对的受众大概是那些刚开始研究生生活，对Linux系统了解不多的童鞋吧（微笑<br>我本人真正开始使用Linux的时间也不算长，水平有限，可能分享的内容远不及大神们的有用。希望能和大家多多交流，相互学习。另外，对于可能出现的错误，还请大家多多指正。</p>
<h1 id="我眼里的Linux"><a href="#我眼里的Linux" class="headerlink" title="我眼里的Linux"></a>我眼里的Linux</h1><p>随便翻开一本Linux教程，开头都要讲讲Linux的历史。我感觉关于历史的信息，大家大可自己去书上读一读，所以我想了想还是跳过这部分，直接聊一聊自己对Linux的整体认识或者我是怎么看待Linux的。<br>大多数人最开始接触的应该都是Windows系统，现在突然要改用另一种系统，我们就要先了解这个新系统和我们平时用的究竟有多大不同。在我看来，两个系统其实都是在做着相同的事，即为我们提供一个使用计算机各个硬件的外部接口，通过操作系统提供的接口，我们可以使用鼠标键盘进行输入，调用CPU进行计算，用显示器查看结果。而对于它俩的区别，我觉得Windows看起来像是一位神奇的魔术师，而Linux则像是精明的科学家；或者Windows像是偏于感性的右脑，而Linux则为理性的左脑。这么形容它们，主要是因为Windows善于给我们呈现视听上的多彩，而Linux则注重内核的优化（更有效地使用计算机）吧。<br>要是稍微具体地说说Linux与Windows的差异，最直观最先感觉到的，就是会话界面和图形界面的区别了（当然不少Linux发行版也带有图形界面）。Windows下对系统的简单操作主要是由鼠标来完成（码字的时候还是靠键盘咯），因为它有很不错的图形界面，让操作变得形象化；而一开始使用Linux时，总感觉自己在用上世纪的电脑，要不厌其烦的通过输入字符来告诉它你的想法。相信有些不太喜欢编程的筒子们有些上手困难，不过呢，习惯就好啦！甚至还会变得爱上这种敲命令的操作方式了呢！<br>我要提到的另一个事，是关于多用户的问题，但这并不是两个系统间的差异，而是使用服务器时需要关注的问题。尽管Windows也是多用户的系统，但它一般都是安装在个人电脑上，基本也就是个人使用，用户除了你自己以外，就只有几个特殊的用户了吧（Administrator、Guest、System）。当然Windows也有服务器版本，但在服务器上Linux使用更为广泛，这意味着，如果你在服务器上使用Linux时，将会有一堆人跟你抢用计算资源，也意味着你需要知道在Linux下如何查看计算机的使用情况。这就好比是你在Windows下突然发现电脑特别卡了，就会调出任务管理器，看看是不是有些进程占了很多资源，然后干掉它！不同的是，在服务器上你并不能轻易的就把人家的进程给K.O.了（无奈<br>慢着，还有一件事我觉得有必要说一下！是关于编写程序或者使用数值模式时的问题。在Windows下面，我们写好源代码以后，点击编译器的编译、链接、运行……结果就出来了；或者有些可以在Windows下安装的数值模式，使用时可能只需要按照向导点一点，结果也就出来了。但在Linux下面，不光编译、链接、运行这三个步骤需要你通过打字敲命令来实现，而且还有一堆关于环境的设置问题需要你自己解决。简单来说就是，在Windows下的点击，其实伴随着编译器的一系列繁杂的动作，而在Linux下这些动作都需要你自己来完成！我那不长的模式调试经历，就已经让我明白，有时候这就是个麻烦事儿。T_T</p>
<h1 id="傻瓜式的Linux安装教程"><a href="#傻瓜式的Linux安装教程" class="headerlink" title="傻瓜式的Linux安装教程"></a>傻瓜式的Linux安装教程</h1><p>由于Linux系统的开源性，其发行版可以说是种类繁多，大致列举几个吧：RedHat、Ubuntu、Fedora、Debian、CentOS、Deepin（国产）等等。Linux的桌面环境（给你的Linux装一个图形界面，如GNOME、KDE等，用起来也有了Windows的一些便捷之处）也在不断改善，对文字处理、图片、视频音频播放等方面的支持也不错，总有预感Linux的普及度将越来越广，说不定以后在个人电脑市场上也要给Windows施压呢！<br><img src="/2017/08/19/06climate-linux-intro-1/pic_1.png" alt="pic_1.png" title=""><br>下面我就稍微示范下在个人电脑上傻瓜式安装Fedora 23的步骤吧！<br>需要的工具：LiveUSB Creator软件、Fedora 23镜像文件、8G以上U盘、一台电脑</p>
<ol>
<li>制作安装Fedora 23的启动U盘：<br>下载<a href="https://fedorahosted.org/liveusb-creator/" target="_blank" rel="external">LiveUSB Creator</a>，以及<a href="https://getfedora.org/zh_CN/workstation/download/" target="_blank" rel="external">Fedora 23的光盘镜像</a>，打开LiveUSB Creator。<br>LiveUSB Creator是Fedora官网上的一个小工具，用来制作启动U盘，操作非常简单，一目了然，相信大家看了就会用~<img src="/2017/08/19/06climate-linux-intro-1/pic_2.png" alt="pic_2.png" title="">
<img src="/2017/08/19/06climate-linux-intro-1/pic_3.png" alt="pic_3.png" title="">
我们已经下好了Fedora 23的镜像文件，那么就选左边的方式吧（Use existing Live CD）！选好镜像文件及要刻的那个U盘，就可以开始制作启动U盘了。<br>做好启动U盘以后就重启电脑，然后进行安装吧！</li>
<li>用U盘启动Fedora 23安装程序，进行安装：<br>重启电脑后要选择从U盘启动，即刚才你制作的那个U盘<img src="/2017/08/19/06climate-linux-intro-1/pic_4.jpg" alt="pic_4.jpg" title="">
<img src="/2017/08/19/06climate-linux-intro-1/pic_5.jpg" alt="pic_5.jpg" title="">
然后就可以看到U盘里的东西嘞！你可以选择先体验一下，或者现在就开始安装！<img src="/2017/08/19/06climate-linux-intro-1/pic_6.jpg" alt="pic_6.jpg" title="">
<img src="/2017/08/19/06climate-linux-intro-1/pic_7.jpg" alt="pic_7.jpg" title="">
安装过程按照提示就可以了，不过要注意选好你要安装Fedora的那个硬盘哦~（叹号那个）<br>因为我已经在自己电脑上装过Fedora啦，所以我就尝试着给另一个U盘装了个Fedora（偷笑<img src="/2017/08/19/06climate-linux-intro-1/pic_8.jpg" alt="pic_8.jpg" title="">
<img src="/2017/08/19/06climate-linux-intro-1/pic_9.jpg" alt="pic_9.jpg" title="">
开始安装！这时你可以设置root帐号的密码，以及创建一个新用户。<br>耐心等待后，一个属于你自己的Linux系统就诞生啦！（由于我是在U盘上装的，它不太给力，安装过程等的我好苦啊）<img src="/2017/08/19/06climate-linux-intro-1/pic_10.jpg" alt="pic_10.jpg" title="">
<img src="/2017/08/19/06climate-linux-intro-1/pic_11.jpg" alt="pic_11.jpg" title="">
PS：“制作启动U盘”和“把Fedora装在U盘上”，这是不同的过程哦~所以我用到了两个U盘，正常情况下是一个启动U盘+一块硬盘（为了避免误解，还是画蛇添足地说明下吧）</li>
</ol>
<p>好了，第一期就到这了，希望可以帮助到大家吧！也希望这是一个不错的开头~~~^。^</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Linux 命令备忘录]]></title>
      <url>http://nearsc.github.io/2017/08/19/linux-notes/</url>
      <content type="html"><![CDATA[<p>记录一些比较实用的linux命令。当然，每个命令的描述会尽可能地被缩短，以保持页面的简洁感。如果以后想要单独写几篇笔记，对某些命令进行详细的研究，那这个页面也可以作为一个很好的索引页。</p>
<a id="more"></a>
<h1 id="网络传输"><a href="#网络传输" class="headerlink" title="网络传输"></a>网络传输</h1><h2 id="wget"><a href="#wget" class="headerlink" title="wget"></a>wget</h2><pre><code>wget -nH --cut-dirs=* -m --ftp-user=* --ftp-password=* ftp://*.*.*.*/*
</code></pre><p>-nH：不创建以主机名命名的目录<br>–cut-dirs：忽略主机上的目录层数<br>-m：下载所有子目录并且保留目录结构<br>–ftp-user：FTP用户名<br>–ftp-password：FTP密码<br>ftp://<em>.</em>.<em>.</em>/*：FTP主机地址。最后可以跟目录名来下载指定目录</p>
<h1 id="时间处理"><a href="#时间处理" class="headerlink" title="时间处理"></a>时间处理</h1><h2 id="date"><a href="#date" class="headerlink" title="date"></a>date</h2><pre><code>date -u -d * -s * +%y%m%d%H
</code></pre><p>-u：获取UTC时间<br>-d：不指定时获取当前时间，指定时获取特定时间<br>-s：设置系统时间<br>+*：指定时间格式</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Sudoku 测试页]]></title>
      <url>http://nearsc.github.io/2017/06/16/sudoku/</url>
      <content type="html"><![CDATA[<p>就当是熟悉下JS啦，当然完成度还不高，大概50%吧？</p>
<a id="more"></a>
<p><form action="" id="form1"></form></p>
<script type="text/javascript" src="/js/sudoku.js"></script>
<script type="text/javascript">
    sudoku = new Sudoku();
    sudoku.initSudoku("form1", sudoku);
</script>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Vi 备忘录（未完待续）]]></title>
      <url>http://nearsc.github.io/2016/06/26/vi-notes/</url>
      <content type="html"><![CDATA[<p>虽说已经用了很久的vi，可是对于vi不同功能的熟练程度是不同的，这意味着有时会忘掉某些操作而需要查阅相关信息。此时若是手边没有参考书，就非常令人抓狂，只好去网上进行搜索。既然如此，那就花点时间整理下吧，查阅起来应该方便不少。我个人习惯是把vi和vim混在一起统称为vi的，因此尽管标题是“Vi 备忘录”，但其实也包含了vim的功能。</p>
<a id="more"></a>
<h1 id="Vi-的简介"><a href="#Vi-的简介" class="headerlink" title="Vi 的简介"></a>Vi 的简介</h1><h2 id="Vi-的基本模式"><a href="#Vi-的基本模式" class="headerlink" title="Vi 的基本模式"></a>Vi 的基本模式</h2><p>使用 <code>vi</code> 时主要有四种模式：<code>一般模式</code>、<code>插入模式</code>、<code>命令行模式</code>、<code>可视化模式</code>。<code>一般模式</code> 下可以快速浏览文本，<code>插入模式</code> 下可以自由编辑文本，<code>命令行模式</code> 下可以进行搜索、保存等特殊操作，<code>可视化模式</code> 下可以进行块操作。</p>
<h2 id="Vi-的特性"><a href="#Vi-的特性" class="headerlink" title="Vi 的特性"></a>Vi 的特性</h2><p>未完待续</p>
<h1 id="Vi-命令快速查询"><a href="#Vi-命令快速查询" class="headerlink" title="Vi 命令快速查询"></a>Vi 命令快速查询</h1><p>这里根据各命令的功能进行归类总结。值得注意的是，许多命令都可以在前面加上数字n，来完成n次操作；也可以进行 <code>操作+移动</code> 的组合，来进行快速操作，如 <code>d$</code> 。</p>
<h2 id="移动光标"><a href="#移动光标" class="headerlink" title="移动光标"></a>移动光标</h2><table>
<thead>
<tr>
<th>操作</th>
<th>功能</th>
</tr>
</thead>
<tbody>
<tr>
<td>(n)h 或 (n)← 或 (n)[Backspace] 或 (n)[Ctrl]h</td>
<td>向左移动一(n)个字符</td>
</tr>
<tr>
<td>(n)j 或 (n)↓ 或 (n)[Ctrl]n 或 (n)[Ctrl]j</td>
<td>向下移动一(n)行</td>
</tr>
<tr>
<td>(n)k 或 (n)↑ 或 (n)[Ctrl]p</td>
<td>向上移动一(n)行</td>
</tr>
<tr>
<td>(n)l 或 (n)→ 或 (n)[space]</td>
<td>向右移动一(n)个字符</td>
</tr>
<tr>
<td>(n)[Ctrl]f 或 (n)[Page Down]</td>
<td>向下移动一(n)页</td>
</tr>
<tr>
<td>(n)[Ctrl]b 或 (n)[Page Up]</td>
<td>向上移动一(n)页</td>
</tr>
<tr>
<td>(n)[Ctrl]d</td>
<td>向下移动半页(n行)</td>
</tr>
<tr>
<td>(n)[Ctrl]u</td>
<td>向上移动半页(n行)</td>
</tr>
<tr>
<td>(n)[Ctrl]e</td>
<td>向下滚动一(n)行</td>
</tr>
<tr>
<td>(n)[Ctrl]y</td>
<td>向上滚动一(n)行</td>
</tr>
<tr>
<td>0 或 [Home]</td>
<td>移动至当前行行首</td>
</tr>
<tr>
<td>(n)$ 或 (n)[End]</td>
<td>移动至当前行(向下第n行)行尾</td>
</tr>
<tr>
<td>^ 或 _</td>
<td>移动至当前行的非空格行首</td>
</tr>
<tr>
<td>(n)+ 或 (n)[Enter] 或 (n)[Ctrl]m</td>
<td>移动至下一(n)行的非空格行首</td>
</tr>
<tr>
<td>(n)-</td>
<td>移动至上一(n)行的非空格行首</td>
</tr>
<tr>
<td>(n)zt 或 (n)z[Enter]</td>
<td>将当前（第n）行滚动至屏幕顶部</td>
</tr>
<tr>
<td>(n)zz 或 (n)z.</td>
<td>将当前（第n）行滚动至屏幕中间</td>
</tr>
<tr>
<td>(n)zb 或 (n)z-</td>
<td>将当前（第n）行滚动至屏幕底部</td>
</tr>
<tr>
<td>[Ctrl]o</td>
<td>移动至较早的位置</td>
</tr>
<tr>
<td>(n)|</td>
<td>移动至当前行第一(n)列</td>
</tr>
<tr>
<td>(</td>
<td>移动至上一个句子的开头</td>
</tr>
<tr>
<td>)</td>
<td>移动至下一个句子的开头</td>
</tr>
<tr>
<td>{</td>
<td>移动至上一个段落</td>
</tr>
<tr>
<td>}</td>
<td>移动至下一个段落</td>
</tr>
<tr>
<td>[[</td>
<td></td>
</tr>
<tr>
<td>]]</td>
<td></td>
</tr>
<tr>
<td>(n)H</td>
<td>移动至屏幕第一(n)行的非空格行首</td>
</tr>
<tr>
<td>M</td>
<td>移动至屏幕中间行的非空格行首</td>
</tr>
<tr>
<td>(n)L</td>
<td>移动至屏幕倒数第一(n)行的非空格行首</td>
</tr>
<tr>
<td>(n)w</td>
<td>移动至下一(n)个单词词首</td>
</tr>
<tr>
<td>(n)e</td>
<td>移动至下一(n)个单词词尾</td>
</tr>
<tr>
<td>(n)b</td>
<td>移动至上一(n)个单词词首</td>
</tr>
<tr>
<td>(n)ge</td>
<td>移动至上一(n)个单词词尾</td>
</tr>
<tr>
<td>(n)W</td>
<td>移动至下一(n)个单词词首，跳过标点符号</td>
</tr>
<tr>
<td>(n)E</td>
<td>移动至下一(n)个单词词尾，跳过标点符号</td>
</tr>
<tr>
<td>(n)B</td>
<td>移动至上一(n)个单词词首，跳过标点符号</td>
</tr>
<tr>
<td>(n)gE</td>
<td>移动至上一(n)个单词词尾，跳过标点符号</td>
</tr>
<tr>
<td>G</td>
<td>移动至最后一行</td>
</tr>
<tr>
<td>nG</td>
<td>移动至第n行</td>
</tr>
<tr>
<td>gg</td>
<td>移动至第一行</td>
</tr>
<tr>
<td>f[char]</td>
<td>移动至当前行下一个字符char</td>
</tr>
<tr>
<td>F[char]</td>
<td>移动至当前行上一个字符char</td>
</tr>
<tr>
<td>t[char]</td>
<td>移动至当前行下一个字符char的前一个字符</td>
</tr>
<tr>
<td>T[char]</td>
<td>移动至当前行上一个字符char的后一个字符</td>
</tr>
<tr>
<td>;</td>
<td>执行上一次的[fFtT]</td>
</tr>
<tr>
<td>,</td>
<td>;的反向，;为[fFtT]则,为[FfTt]</td>
</tr>
<tr>
<td>%</td>
<td>移动至与当前括号匹配的括号，包括()、[]、{}、&lt;&gt;等</td>
</tr>
<tr>
<td>n%</td>
<td>移动至文件n%处</td>
</tr>
</tbody>
</table>
<h2 id="删除"><a href="#删除" class="headerlink" title="删除"></a>删除</h2><p>使用 <code>d</code> 进行删除时，可以通过 <code>(n1)d(n2)[CursorMove]</code> 的形式将 <code>d</code> 与光标移动 <code>[CursorMove]</code> 进行组合，对当前位置至目标位置间的字符进行删除，并且利用n1、n2来进行多次操作。<br>列举部分有关 <code>d</code> 的操作，未列举的可参考 <code>光标移动</code> 部分的内容。</p>
<table>
<thead>
<tr>
<th>操作</th>
<th>功能</th>
</tr>
</thead>
<tbody>
<tr>
<td>(n)dd 或 d(n)d</td>
<td>向下删除一(n)行（从当前行开始计算）</td>
</tr>
<tr>
<td>dG</td>
<td>删除当前行至最后一行</td>
</tr>
<tr>
<td>dnG</td>
<td>删除当前行至第n行</td>
</tr>
<tr>
<td>dgg</td>
<td>删除当前行至第1行</td>
</tr>
<tr>
<td>d0</td>
<td>删除当前光标至行首</td>
</tr>
<tr>
<td>d$ 或 D</td>
<td>删除当前光标至行尾</td>
</tr>
<tr>
<td>(n)dw 或 d(n)w</td>
<td>从当前光标开始向后删除至下一(n)个单词词首前</td>
</tr>
<tr>
<td>(n)de 或 d(n)e</td>
<td>从当前光标开始向后删除至下一(n)个单词词尾后</td>
</tr>
<tr>
<td>(n)db 或 d(n)b</td>
<td>从当前光标开始向前删除至上一(n)个单词词首前</td>
</tr>
<tr>
<td>(n)dge 或 d(n)ge</td>
<td>从当前字符后开始向前删除至上一(n)个单词词尾前</td>
</tr>
<tr>
<td>(n1)d(n2)[w/e/b/ge]</td>
<td>同上，但处理n1×n2个单词</td>
</tr>
<tr>
<td>daw</td>
<td>从单词开头开始向后删除至下一个单词词首前(不确定)</td>
</tr>
<tr>
<td>diw</td>
<td></td>
</tr>
<tr>
<td>das</td>
<td></td>
</tr>
<tr>
<td>dis</td>
<td></td>
</tr>
<tr>
<td>df[char]</td>
<td></td>
</tr>
<tr>
<td>dF[char]</td>
<td></td>
</tr>
<tr>
<td>dt[char]</td>
<td></td>
</tr>
<tr>
<td>dT[char]</td>
<td></td>
</tr>
<tr>
<td>(n)d/string 或 d(n)/string</td>
<td>向下搜索字符串string，并从当前光标开始向后删除至下一个string前</td>
</tr>
<tr>
<td>(n)d?string 或 d(n)?string</td>
<td>向上搜索字符串string，并从当前光标开始向前删除至下一个string前</td>
</tr>
<tr>
<td>[Del]</td>
<td>向后删除一个字符</td>
</tr>
<tr>
<td>(n)x</td>
<td>向后删除一(n)个字符</td>
</tr>
<tr>
<td>(n)X</td>
<td>向前删除一(n)个字符</td>
</tr>
</tbody>
</table>
<h2 id="复制"><a href="#复制" class="headerlink" title="复制"></a>复制</h2><p>使用 <code>y</code> 进行删除时，可以通过 <code>(n1)y(n2)[CursorMove]</code> 的形式将 <code>y</code> 与光标移动 <code>[CursorMove]</code> 进行组合，对当前位置至目标位置间的字符进行删除，并且利用n1、n2来进行多次操作。<br>列举部分有关 <code>y</code> 的操作，未列举的可参考 <code>光标移动</code> 部分和 <code>删除</code> 部分的内容。</p>
<table>
<thead>
<tr>
<th>操作</th>
<th>功能</th>
</tr>
</thead>
<tbody>
<tr>
<td>(n)yy 或 (n)Y</td>
<td>向下复制一(n)行（从当前行开始计算）</td>
</tr>
<tr>
<td>yG</td>
<td>复制当前行至最后一行</td>
</tr>
<tr>
<td>ynG</td>
<td>复制当前行至第n行</td>
</tr>
<tr>
<td>ygg</td>
<td>复制当前行至第1行</td>
</tr>
<tr>
<td>y0</td>
<td>复制当前光标至行首</td>
</tr>
<tr>
<td>y$</td>
<td>复制当前光标至行尾</td>
</tr>
<tr>
<td>Y</td>
<td>相当于yy</td>
</tr>
<tr>
<td>yw</td>
<td></td>
</tr>
<tr>
<td>yb</td>
<td></td>
</tr>
<tr>
<td>ye</td>
<td></td>
</tr>
<tr>
<td>yaw</td>
<td></td>
</tr>
<tr>
<td>y/string</td>
<td></td>
</tr>
<tr>
<td>y?string</td>
<td></td>
</tr>
</tbody>
</table>
<h2 id="修改"><a href="#修改" class="headerlink" title="修改"></a>修改</h2><table>
<thead>
<tr>
<th>操作</th>
<th>功能</th>
</tr>
</thead>
<tbody>
<tr>
<td>(n)J</td>
<td>删除换行符，连接下一(n)行与当前行</td>
</tr>
<tr>
<td>(n)p</td>
<td>将已复制或删除的内容粘贴一(n)份至下一行或当前字符后</td>
</tr>
<tr>
<td>(n)P</td>
<td>将已复制或删除的内容粘贴一(n)份至上一行或当前字符前</td>
</tr>
<tr>
<td>(n)u</td>
<td>撤销一(n)次操作</td>
</tr>
<tr>
<td>U</td>
<td>恢复上一次修改行的所有修改</td>
</tr>
<tr>
<td>(n)[Ctrl]r</td>
<td>恢复一(n)次撤销</td>
</tr>
<tr>
<td>.</td>
<td>重复上一个操作</td>
</tr>
<tr>
<td>(n)&gt;&gt; 或 &gt;(n)&gt;</td>
<td>将当前行（向下n行）向右移动shiftwidth的距离</td>
</tr>
<tr>
<td>(n)&lt;&lt; 或 &lt;(n)&lt;</td>
<td>将当前行（向下n行）向左移动shiftwidth的距离</td>
</tr>
<tr>
<td>(n)~</td>
<td>更改一(n)个字母的大小写，并向后移动一(n)个字符</td>
</tr>
<tr>
<td>(n)[Ctrl]a</td>
<td>使当前数字加一(n)</td>
</tr>
</tbody>
</table>
<h2 id="插入"><a href="#插入" class="headerlink" title="插入"></a>插入</h2><table>
<thead>
<tr>
<th>操作</th>
<th>功能</th>
</tr>
</thead>
<tbody>
<tr>
<td>(n)i</td>
<td>从当前光标插入（重复n次）</td>
</tr>
<tr>
<td>(n)I</td>
<td>从行首插入（重复n次）</td>
</tr>
<tr>
<td>(n)a</td>
<td>从当前光标下一个字符后插入（重复n次）</td>
</tr>
<tr>
<td>(n)A</td>
<td>从行尾插入（重复n次）</td>
</tr>
<tr>
<td>(n)o</td>
<td>从下一行插入新行（重复n次）</td>
</tr>
<tr>
<td>(n)O</td>
<td>从上一行插入新行（重复n次）</td>
</tr>
<tr>
<td>(n)r</td>
<td>单次替换一(n)个字符</td>
</tr>
<tr>
<td>R</td>
<td>多次替换字符</td>
</tr>
<tr>
<td>(n)cc 或 c(n)c 或 (n)S</td>
<td>向下删除一(n)行，并从新行插入（从当前行开始计算）</td>
</tr>
<tr>
<td>(n)cw 或 c(n)w</td>
<td>从当前光标开始向后删除至下一个单词词尾，并从当前光标插入</td>
</tr>
<tr>
<td>(n)ce 或 c(n)e</td>
<td>同上</td>
</tr>
<tr>
<td>(n)cb 或 c(n)b</td>
<td></td>
</tr>
<tr>
<td>caw</td>
<td>从单词开头开始向后删除至下一个单词词首，并从当前光标插入(不确定)</td>
</tr>
<tr>
<td>c0</td>
<td>删除当前光标至行首，并从当前光标插入</td>
</tr>
<tr>
<td>c$ 或 C</td>
<td>删除当前光标至行尾，并从当前光标插入</td>
</tr>
<tr>
<td>c/string</td>
<td></td>
</tr>
<tr>
<td>c?string</td>
<td></td>
</tr>
<tr>
<td>(n)s</td>
<td>删除一(n)个字符，并从当前光标插入</td>
</tr>
</tbody>
</table>
<h2 id="块选取"><a href="#块选取" class="headerlink" title="块选取"></a>块选取</h2><p>进入块选取后可以使用移动光标的快捷键来快速选取</p>
<table>
<thead>
<tr>
<th>操作</th>
<th>功能</th>
</tr>
</thead>
<tbody>
<tr>
<td>v</td>
<td>按字符进行块选取</td>
</tr>
<tr>
<td>V</td>
<td>按行进行块选取</td>
</tr>
<tr>
<td>[Ctrl]v</td>
<td>按矩形进行块选取</td>
</tr>
<tr>
<td>y</td>
<td>块选取后复制反白区域</td>
</tr>
<tr>
<td>d</td>
<td>块选取后删除反白区域</td>
</tr>
<tr>
<td>c</td>
<td>按矩形进行块选取后，替换反白区域</td>
</tr>
<tr>
<td>~</td>
<td>更改泛白区域的字母大小写</td>
</tr>
</tbody>
</table>
<h2 id="标记"><a href="#标记" class="headerlink" title="标记"></a>标记</h2><p>可以对特定位置进行标记，以达到快速访问与跳转的目的。</p>
<table>
<thead>
<tr>
<th>操作</th>
<th>功能</th>
</tr>
</thead>
<tbody>
<tr>
<td>m[mark]</td>
<td>将当前行设置标记[mark]，[mark]取为[a-z]</td>
</tr>
<tr>
<td>y’[mark]</td>
<td>复制标记为[mark]的行至当前行之间的内容</td>
</tr>
<tr>
<td>d’[mark]</td>
<td>删除标记为[mark]的行至当前行之间的内容</td>
</tr>
<tr>
<td>‘[mark]</td>
<td>移动至标记[mark]所在行的非空格行首</td>
</tr>
<tr>
<td>‘’ 或 ‘`</td>
<td>移动至上一行的非空格行首</td>
</tr>
<tr>
<td>`[mark]</td>
<td>移动至标记[mark]所在行的具体位置</td>
</tr>
<tr>
<td>`` 或 `‘</td>
<td>移动至上一行的具体位置</td>
</tr>
<tr>
<td>‘.</td>
<td></td>
</tr>
<tr>
<td>`.</td>
<td></td>
</tr>
<tr>
<td>:marks</td>
<td>查看所有标记</td>
</tr>
</tbody>
</table>
<h2 id="宏与寄存器"><a href="#宏与寄存器" class="headerlink" title="宏与寄存器"></a>宏与寄存器</h2><p>将一系列操作以宏的形式保存至寄存器中，以达到快速执行重复操作的目的。</p>
<table>
<thead>
<tr>
<th>操作</th>
<th>功能</th>
</tr>
</thead>
<tbody>
<tr>
<td>q[register]和q</td>
<td>将一系列操作设置为宏存至寄存器[register]，[register]取为[a-z]</td>
</tr>
<tr>
<td>“[register]yy</td>
<td>复制当前行至[register]中</td>
</tr>
<tr>
<td>“[register]dd</td>
<td>删除当前行至[register]中</td>
</tr>
<tr>
<td>“[register]p</td>
<td>复制[register]内容至下一行</td>
</tr>
<tr>
<td>(n)@[register]</td>
<td>执行一(n)次寄存器[register]内的宏</td>
</tr>
<tr>
<td>@@</td>
<td>执行上一次执行的宏（只执行一次，不论上一次执行了多少次）</td>
</tr>
</tbody>
</table>
<h2 id="标签"><a href="#标签" class="headerlink" title="标签"></a>标签</h2><p>未完待续</p>
<h2 id="插入模式"><a href="#插入模式" class="headerlink" title="插入模式"></a>插入模式</h2><table>
<thead>
<tr>
<th>操作</th>
<th>功能</th>
</tr>
</thead>
<tbody>
<tr>
<td>[Ctrl]n</td>
<td>输入提示与自动补全（向下）</td>
</tr>
<tr>
<td>[Ctrl]p</td>
<td>输入提示与自动补全（向上）</td>
</tr>
<tr>
<td>[Ctrl]e</td>
<td>逐个字符复制下一行</td>
</tr>
<tr>
<td>[Ctrl]y</td>
<td>逐个字符复制上一行</td>
</tr>
<tr>
<td>[Ctrl]o</td>
<td>临时切换至一般模式</td>
</tr>
<tr>
<td>[Esc] 或 [Ctrl][</td>
<td>插入模式切换至一般模式</td>
</tr>
<tr>
<td>[Backspace] 或 [Ctrl]h</td>
<td>插入模式中向左删除一个字符</td>
</tr>
</tbody>
</table>
<h2 id="文件操作"><a href="#文件操作" class="headerlink" title="文件操作"></a>文件操作</h2><table>
<thead>
<tr>
<th>操作</th>
<th>功能</th>
</tr>
</thead>
<tbody>
<tr>
<td>:w</td>
<td>保存文件</td>
</tr>
<tr>
<td>:w &gt;&gt; [file]</td>
<td>以追加的形式保存文件至[file]</td>
</tr>
<tr>
<td>:w!</td>
<td>强制保存文件</td>
</tr>
<tr>
<td>:q</td>
<td>退出文件（要求修改已保存）</td>
</tr>
<tr>
<td>:q!</td>
<td>退出但不保存</td>
</tr>
<tr>
<td>:wq</td>
<td>保存后退出</td>
</tr>
<tr>
<td>:w [file]</td>
<td>另存为[file]</td>
</tr>
<tr>
<td>ZZ</td>
<td>若文件无改动则不保存退出，若文件被改动则保存后退出</td>
</tr>
<tr>
<td>:r [file]</td>
<td>在下一行插入[file]的内容</td>
</tr>
<tr>
<td>:n r [file]</td>
<td>在第n行的下一行插入[file]的内容</td>
</tr>
<tr>
<td>:e!</td>
<td>返回至上次保存后的状态，相当于重新打开</td>
</tr>
</tbody>
</table>
<h2 id="搜索"><a href="#搜索" class="headerlink" title="搜索"></a>搜索</h2><table>
<thead>
<tr>
<th>操作</th>
<th>功能</th>
</tr>
</thead>
<tbody>
<tr>
<td>(n)/string</td>
<td>向下搜索字符串string的第一(n)个匹配项</td>
</tr>
<tr>
<td>(n)?string</td>
<td>向上搜索字符串string的第一(n)个匹配项</td>
</tr>
<tr>
<td>/string\c</td>
<td></td>
</tr>
<tr>
<td>/\<string\></string\></td>
<td></td>
</tr>
<tr>
<td>n</td>
<td>移动至下一个搜索的匹配项</td>
</tr>
<tr>
<td>N</td>
<td>移动至上一个搜索的匹配项</td>
</tr>
<tr>
<td>gd</td>
<td>搜索当前单词，并停留在当前匹配项</td>
</tr>
<tr>
<td>(n)#</td>
<td>搜索当前单词，并移动到上一(n)个匹配项</td>
</tr>
<tr>
<td>(n)*</td>
<td>搜索当前单词，并移动到下一(n)个匹配项</td>
</tr>
</tbody>
</table>
<h2 id="调整"><a href="#调整" class="headerlink" title="调整"></a>调整</h2><table>
<thead>
<tr>
<th>操作</th>
<th>功能</th>
</tr>
</thead>
<tbody>
<tr>
<td>:% [action]</td>
<td>对所有行进行操作[action]</td>
</tr>
<tr>
<td>:n1,n2 [action]</td>
<td>对第n1行至n2行之间执行操作[action]，’1,$’同’%’</td>
</tr>
<tr>
<td>:n [action]</td>
<td>对第n行执行操作[action]</td>
</tr>
<tr>
<td>:n1,n2 y</td>
<td>复制第n1至n2行之间内容</td>
</tr>
<tr>
<td>:n1,n2 d</td>
<td>删除第n1至n2行之间内容</td>
</tr>
<tr>
<td>:n1,n2 m n3</td>
<td>将第n1至n2行移动到第n3行之后</td>
</tr>
<tr>
<td>:n1,n2 co n3</td>
<td>将第n1至n2行复制到第n3行之后</td>
</tr>
<tr>
<td>:n1,n2 w [file]</td>
<td>将第n1至n2行另存为[file]</td>
</tr>
<tr>
<td>:n1,n2 w ![command]</td>
<td>将第n1至n2行作为标准输入来执行[command]</td>
</tr>
<tr>
<td>:n1,n2 s/str1/str2/</td>
<td>在第n1至n2行之间搜索第一个str1并替换成str2</td>
</tr>
<tr>
<td>:n1,n2 s/str1/str2/g</td>
<td>在第n1至n2行之间搜索str1并替换成str2</td>
</tr>
<tr>
<td>:n1,n2 s/str1/str2/gc</td>
<td>在第n1至n2行之间搜索str1并替换成str2，替换前需确认</td>
</tr>
<tr>
<td>:n1,n2 &gt;&gt;</td>
<td>将第n1行至n2行之间向右移动一个[tab]</td>
</tr>
<tr>
<td>:n1,n2 &lt;&lt;</td>
<td>将第n1行至n2行之间向左移动一个[tab]</td>
</tr>
<tr>
<td>:g/str/d</td>
<td></td>
</tr>
<tr>
<td>:s 或 :&amp;</td>
<td>执行上一步的s/str1/str2/g命令</td>
</tr>
<tr>
<td>:@:</td>
<td>执行上一次的命令行模式的命令</td>
</tr>
</tbody>
</table>
<h2 id="外部命令"><a href="#外部命令" class="headerlink" title="外部命令"></a>外部命令</h2><table>
<thead>
<tr>
<th>操作</th>
<th>功能</th>
</tr>
</thead>
<tbody>
<tr>
<td>:![command]</td>
<td>暂时离开vi并执行命令[command]</td>
</tr>
<tr>
<td>:!!</td>
<td>执行上一次的外部命令</td>
</tr>
<tr>
<td>:.![command]</td>
<td></td>
</tr>
<tr>
<td>:sh</td>
<td>暂时离开vi执行多条命令</td>
</tr>
<tr>
<td>[Ctrl]d</td>
<td>执行:sh后由此操作回到vi</td>
</tr>
<tr>
<td>:r ![command]</td>
<td>执行外部命令并将其标准输出插入至下一行</td>
</tr>
</tbody>
</table>
<h2 id="多文件编辑"><a href="#多文件编辑" class="headerlink" title="多文件编辑"></a>多文件编辑</h2><table>
<thead>
<tr>
<th>操作</th>
<th>功能</th>
</tr>
</thead>
<tbody>
<tr>
<td>:vi[file]</td>
<td>在vi中打开另一个文件[file]</td>
</tr>
<tr>
<td>:n</td>
<td>切换至下一个文件</td>
</tr>
<tr>
<td>:N</td>
<td>切换至上一个文件</td>
</tr>
<tr>
<td>:next</td>
<td></td>
</tr>
<tr>
<td>:previous</td>
<td></td>
</tr>
<tr>
<td>:wnext</td>
<td></td>
</tr>
<tr>
<td>:args</td>
<td></td>
</tr>
<tr>
<td>:args [file1] [file2] …</td>
<td></td>
</tr>
<tr>
<td>:last</td>
<td></td>
</tr>
<tr>
<td>:first</td>
<td></td>
</tr>
<tr>
<td>[Ctrl]^</td>
<td>返回至上一个编辑的文件</td>
</tr>
<tr>
<td>:file</td>
<td>列出当前文件的信息</td>
</tr>
<tr>
<td>:files</td>
<td>列出所有打开的文件</td>
</tr>
</tbody>
</table>
<h2 id="多窗口编辑"><a href="#多窗口编辑" class="headerlink" title="多窗口编辑"></a>多窗口编辑</h2><table>
<thead>
<tr>
<th>操作</th>
<th>功能</th>
</tr>
</thead>
<tbody>
<tr>
<td>:split</td>
<td>打开新窗口显示当前文件（水平排列）</td>
</tr>
<tr>
<td>:split [file]</td>
<td>打开新窗口显示file（水平排列）</td>
</tr>
<tr>
<td>:vsplit</td>
<td>打开新窗口显示当前文件（垂直排列）</td>
</tr>
<tr>
<td>:vsplit [file]</td>
<td>打开新窗口显示file（垂直排列）</td>
</tr>
<tr>
<td>[Ctrl]wh 或 [Ctrl]w←</td>
<td>移动至左一个窗口</td>
</tr>
<tr>
<td>[Ctrl]wj 或 [Ctrl]w↓</td>
<td>移动至下一个窗口</td>
</tr>
<tr>
<td>[Ctrl]wk 或 [Ctrl]w↑</td>
<td>移动至上一个窗口</td>
</tr>
<tr>
<td>[Ctrl]wl 或 [Ctrl]w→</td>
<td>移动至右一个窗口</td>
</tr>
</tbody>
</table>
<h2 id="个性化设置"><a href="#个性化设置" class="headerlink" title="个性化设置"></a>个性化设置</h2><p>使用 <code>:set</code> 来进行个性化的设置，通常是对两种类型的变量进行设置：取值型和布尔型。</p>
<ul>
<li>取值型 —— :set var=num</li>
<li>布尔型 —— :set (no)var</li>
</ul>
<p>另外，还有一些设置或是查看信息的命令，它们可能不使用 <code>:set</code> 作为开头。</p>
<h3 id="布尔型变量"><a href="#布尔型变量" class="headerlink" title="布尔型变量"></a>布尔型变量</h3><table>
<thead>
<tr>
<th>操作</th>
<th>功能</th>
</tr>
</thead>
<tbody>
<tr>
<td>:set number</td>
<td>显示行号，number可缩写为nu</td>
</tr>
<tr>
<td>:set hlsearch</td>
<td>设置搜索高亮</td>
</tr>
<tr>
<td>:set autoindent</td>
<td>设置自动缩进，autoindent可缩写为ai</td>
</tr>
<tr>
<td>:set autowrite</td>
<td></td>
</tr>
<tr>
<td>:set cindent</td>
<td>设置C语言的自动缩进，缩进量由shiftwidth控制</td>
</tr>
<tr>
<td>:set ignorecase</td>
<td>不区分大小写，ignorecase可缩写为ic</td>
</tr>
<tr>
<td>:set backup</td>
<td>设置自动备份，backup可缩写为bk</td>
</tr>
<tr>
<td>:set mesg</td>
<td></td>
</tr>
<tr>
<td>:set warn</td>
<td></td>
</tr>
<tr>
<td>:set ruler</td>
<td>显示右下状态栏，ruler可缩写为ru</td>
</tr>
<tr>
<td>:set showmode</td>
<td>显示左下模式信息，showmode可缩写为smd</td>
</tr>
<tr>
<td>:set wrapscan</td>
<td>设置搜索达顶部或底部时能回到底部或顶部，wrapscan可缩写为ws</td>
</tr>
</tbody>
</table>
<h3 id="取值型变量"><a href="#取值型变量" class="headerlink" title="取值型变量"></a>取值型变量</h3><table>
<thead>
<tr>
<th>操作</th>
<th>功能</th>
</tr>
</thead>
<tbody>
<tr>
<td>:set shiftwidth=n</td>
<td>设置偏移量为n个空格，shiftwidth可缩写为sw</td>
</tr>
<tr>
<td>:set window=n</td>
<td>，window可缩写为wi</td>
</tr>
<tr>
<td>:set wrapmargin=n</td>
<td>，wrapmargin可缩写为wm</td>
</tr>
<tr>
<td>:set tabstop=n</td>
<td>设置一个[tab]为n个空格，tabstop可缩写为ts</td>
</tr>
<tr>
<td>:set backspace=[012]</td>
<td>设置backspace是[2]否[01]能够删除任意字符</td>
</tr>
<tr>
<td>:set background=dark</td>
<td>设置颜色色调为深色，background可缩写为bg</td>
</tr>
<tr>
<td>:set background=light</td>
<td>设置颜色色调为浅色，background可缩写为bg</td>
</tr>
<tr>
<td>:set filetype=[filetype]</td>
<td>设置文件类型，如[filetype]取fortran</td>
</tr>
</tbody>
</table>
<h2 id="其他设置及查看信息"><a href="#其他设置及查看信息" class="headerlink" title="其他设置及查看信息"></a>其他设置及查看信息</h2><table>
<thead>
<tr>
<th>操作</th>
<th>功能</th>
</tr>
</thead>
<tbody>
<tr>
<td>:set</td>
<td>显示与系统默认值不同的设置参数</td>
</tr>
<tr>
<td>:set all</td>
<td>显示当前所有的环境参数设置值</td>
</tr>
<tr>
<td>:syntax on 或 :syntax enable</td>
<td>开启语法高亮</td>
</tr>
<tr>
<td>:syntax off 或 :syntax clear</td>
<td>取消语法高亮</td>
</tr>
<tr>
<td>:nohlsearch</td>
<td>单次取消高亮</td>
</tr>
<tr>
<td>:colorscheme [type]</td>
<td></td>
</tr>
<tr>
<td>:hide edit [file]</td>
<td></td>
</tr>
<tr>
<td>:abbreviate str1 str2</td>
<td>将str1设置为str2的缩写，abbreviate可缩写为ab</td>
</tr>
<tr>
<td>:unabbreviate str</td>
<td>删除已设置的缩写str，unabbreviate可缩写为una</td>
</tr>
<tr>
<td>:abbreviate</td>
<td>查看所有已设置的缩写</td>
</tr>
<tr>
<td>:map key1 key2</td>
<td>将关键字序列key1映射到另一个关键字序列key2</td>
</tr>
<tr>
<td>:unmap key</td>
<td>删除已设置的映射key</td>
</tr>
<tr>
<td>:map</td>
<td></td>
</tr>
<tr>
<td>:registers ([register])</td>
<td>查看所有（[register]）寄存器，registers可缩写为reg</td>
</tr>
<tr>
<td>[Ctrl]g</td>
<td>显示当前文件名和状态</td>
</tr>
<tr>
<td>[Ctrl]l</td>
<td>清除并重画屏幕</td>
</tr>
<tr>
<td>Q</td>
<td>进入Ex模式，之后输visual则返回Normal模式</td>
</tr>
<tr>
<td>:help</td>
<td>打开帮助</td>
</tr>
<tr>
<td>:help [operation]</td>
<td></td>
</tr>
<tr>
<td>:version</td>
<td>查看vi的相关设置信息，可缩写为ve</td>
</tr>
<tr>
<td>[Esc][Esc] 或 [Ctrl][[Ctrl][</td>
<td>命令行模式切换至一般模式</td>
</tr>
<tr>
<td>[Backspace] 或 [Ctrl]h</td>
<td>命令行模式中向左删除一个字符</td>
</tr>
</tbody>
</table>
<h2 id="设置文件"><a href="#设置文件" class="headerlink" title="设置文件"></a>设置文件</h2><p><code>vi</code> 启动时，会自行寻找设置文件来初始化设置。按照以下顺序，<code>vi</code> 将读取找到的第一个文件。</p>
<blockquote>
<p>\$HOME/.vimrc<br>\$HOME/_vimrc<br>\$HOME/.exrc<br>\$HOME/_exrc</p>
</blockquote>
<p>如果使用 <code>vi</code> 的GUI版本，则需要读取 <code>gvimrc</code> 文件。使用 <code>:version</code> 命令可以查看读取了哪些文件。<br>如果想要在打开 <code>vi</code> 后自行读取设置文件，可以使用 <code>:source</code> 命令。<br>如果想要把已修改的设置保存为文件，可以使用 <code>:mkvimrc</code> 和 <code>:mkexrc</code> 命令。<br>如果想在不同的目录读取不同的设置文件，需要在当前目录放置一个 <code>.vimrc</code> 文件，同时在 <code>vi</code> 里设置 <code>:set exrc</code>。</p>
<table>
<thead>
<tr>
<th>操作</th>
<th>功能</th>
</tr>
</thead>
<tbody>
<tr>
<td>:mkvimrc [file]</td>
<td>将已设置的内容保存成文件[file]，可缩写为mkv</td>
</tr>
<tr>
<td>:version</td>
<td>可查看读取的设置文件，可缩写为ve</td>
</tr>
<tr>
<td>:source [file]</td>
<td>读取包含设置信息的文件，可缩写为so</td>
</tr>
<tr>
<td>:mkexrc [file]</td>
<td>将已设置的内容保存成文件[file]，可缩写为mk</td>
</tr>
<tr>
<td>:scriptnames</td>
<td>查看加载的脚本，可缩写为scr</td>
</tr>
<tr>
<td>:set exrc</td>
<td>设置为读取当前目录的设置文件，exrc可缩写为ex</td>
</tr>
</tbody>
</table>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Markdown 备忘录]]></title>
      <url>http://nearsc.github.io/2016/06/03/markdown-notes/</url>
      <content type="html"><![CDATA[<p>终于决定要开始整整我的主页了，然后接触到了Markdown，就考虑用它来完成我大部分blog的撰写。虽说使用起来简易方便，没有什么难记的语法，但我感觉自己忘性比较大，还是写个备忘录来记录一下吧。</p>
<a id="more"></a>
<h1 id="基本语法"><a href="#基本语法" class="headerlink" title="基本语法"></a>基本语法</h1><p>Markdown最为基础的一些语法，不包括那些扩展的功能。</p>
<h2 id="标题"><a href="#标题" class="headerlink" title="标题"></a>标题</h2><p>使用 <code>#</code> 将其设置为标题</p>
<pre><code># 基本语法
## 标题
</code></pre><h2 id="强调字体"><a href="#强调字体" class="headerlink" title="强调字体"></a>强调字体</h2><p>前后使用 <code>**</code> 或 <code>__</code> 使字体变为粗体。<br>前后使用 <code>*</code> 或 <code>_</code> 使字体变为粗体。<br>前后使用 <code>**</code> 或 <code>__</code> 并且前后使用 <code>*</code> 或 <code>_</code> 使字体变为粗斜体。<br>前后使用 <code>~~</code> 使字体被划掉。</p>
<pre><code>**我是粗体**
__我也是粗体__
*我是斜体*
_我也是斜体_
**_我是粗斜体_**
__*我也是粗斜体*__
~~我被划掉了~~
</code></pre><blockquote>
<p><strong>我是粗体</strong><br><strong>我也是粗体</strong><br><em>我是斜体</em><br><em>我也是斜体</em><br><strong><em>我是粗斜体</em></strong><br><strong><em>我也是粗斜体</em></strong><br><del>我被划掉了</del></p>
</blockquote>
<h2 id="引用文字"><a href="#引用文字" class="headerlink" title="引用文字"></a>引用文字</h2><p>使用 <code>&gt;</code> 将其设置为引用。当然，可以不是名人名言。</p>
<pre><code>&gt;Remember the past, know the future.
</code></pre><blockquote>
<blockquote>
<p>Remember the past, know the future.</p>
</blockquote>
</blockquote>
<h2 id="代码块"><a href="#代码块" class="headerlink" title="代码块"></a>代码块</h2><p>使用4个空格或者1个tab来获得代码块</p>
<pre><code>&lt;Tab&gt;printf(&quot;这是一个代码块&quot;)

printf(&quot;这是一个代码块&quot;)
</code></pre><h2 id="链接"><a href="#链接" class="headerlink" title="链接"></a>链接</h2><p>使用 <code>[]()</code> 来添链加接</p>
<pre><code>详情请访问[Nearsc的主页](http://nearsc.github.io/)
</code></pre><blockquote>
<p>详情请访问<a href="http://nearsc.github.io/">Nearsc的主页</a></p>
</blockquote>
<h2 id="图片"><a href="#图片" class="headerlink" title="图片"></a>图片</h2><p>使用 <code>![]()</code> 来添加图片</p>
<pre><code>![罗小黑](/images/lxh.gif)
</code></pre><blockquote>
<p><img src="/images/lxh.gif" alt="罗小黑"></p>
</blockquote>
<h2 id="项目清单"><a href="#项目清单" class="headerlink" title="项目清单"></a>项目清单</h2><p>使用数字来添加项目编号<br>使用 <code>-</code> 或 <code>*</code> 或 <code>+</code> 来添加项目符号<br>使用两个空格获得嵌套清单</p>
<pre><code>1. Personal information
  * Nearsc
  * China
2. Hobbies
  1. Music
    - Popular music
    - Classic music
  2. Animation
    + 天空の城ラピュタ
    + 魔女の宅急便
</code></pre><blockquote>
<ol>
<li>Personal information<ul>
<li>Nearsc</li>
<li>China</li>
</ul>
</li>
<li>Hobbies<ol>
<li>Music<ul>
<li>Popular music</li>
<li>Classic music</li>
</ul>
</li>
<li>Animation<ul>
<li>天空の城ラピュタ</li>
<li>魔女の宅急便</li>
</ul>
</li>
</ol>
</li>
</ol>
</blockquote>
<h1 id="GitHub-特殊语法"><a href="#GitHub-特殊语法" class="headerlink" title="GitHub 特殊语法"></a>GitHub 特殊语法</h1><p>包含了部分的 GFM (GitHub Flavored Markdown)</p>
<h2 id="引用代码"><a href="#引用代码" class="headerlink" title="引用代码"></a>引用代码</h2><p>使用 <code>`</code> 来加入一串代码<br><em>嵌入式代码</em> —— 前后各一个<code>`</code></p>
<pre><code>`tar`是Linux下用来打包的命令
</code></pre><blockquote>
<p><code>tar</code>是Linux下用来打包的命令</p>
</blockquote>
<p><em>代码块</em> —— 前后连续三个<code>`</code></p>
<blockquote>
<p>```bash<br>cd ~/Download<br>tar -xvzf netcdf-4.4.0<br>cd netcdf-4.4.0<br>mkdir -p /opt/netcdf/netcdf-4.4.0<br>./configure --prefix=/opt/netcdf/netcdf-4.4.0<br>make all install<br>```</p>
</blockquote>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> ~/Download</span><br><span class="line">tar -xvzf netcdf-4.4.0</span><br><span class="line"><span class="built_in">cd</span> netcdf-4.4.0</span><br><span class="line">mkdir -p /opt/netcdf/netcdf-4.4.0</span><br><span class="line">./configure --prefix=/opt/netcdf/netcdf-4.4.0</span><br><span class="line">make all install</span><br></pre></td></tr></table></figure>
<h2 id="任务清单"><a href="#任务清单" class="headerlink" title="任务清单"></a>任务清单</h2><p>使用 <code>-</code> 和 <code>[ ]</code> 标记为未完成的任务<br>使用 <code>-</code> 和 <code>[x]</code> 标记为已完成的任务</p>
<pre><code>- [x] 给植物浇水
- [ ] 收集雨花石
- [ ] 学画画
</code></pre><h2 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h2><p>使用 <code>-</code> 和 <code>|</code> 来绘制表格</p>
<pre><code>动画名称|上映年份|代表音乐
-|-|-
風の谷のナウシカ|1984|鸟の人
天空の城ラピュタ|1986|空から降ってきた少女
千と千尋の神隠し|2001|あの夏へ
</code></pre><blockquote>
<table>
<thead>
<tr>
<th>动画名称</th>
<th>上映年份</th>
<th>代表音乐</th>
</tr>
</thead>
<tbody>
<tr>
<td>風の谷のナウシカ</td>
<td>1984</td>
<td>鸟の人</td>
</tr>
<tr>
<td>天空の城ラピュタ</td>
<td>1986</td>
<td>空から降ってきた少女</td>
</tr>
<tr>
<td>千と千尋の神隠し</td>
<td>2001</td>
<td>あの夏へ</td>
</tr>
</tbody>
</table>
</blockquote>
]]></content>
    </entry>
    
  
  
</search>
